<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Probe的協同產品設計實習網站</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2024-04-27T14:29:53+08:00</updated><entry><title>W10</title><link href="./cd2024-2a-w10.html" rel="alternate"></link><published>2024-04-26T14:00:00+08:00</published><updated>2024-04-27T14:29:49+08:00</updated><author><name>Probe</name></author><id>tag:None,2024-04-26:./cd2024-2a-w10.html</id><summary type="html">&lt;p&gt;2024 Spring 第十週 網誌&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第十週 網誌&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;h2&gt;w10&lt;/h2&gt;
&lt;p&gt;閱讀結果:&lt;/p&gt;
&lt;p&gt;各篇論文要點摘要：&lt;/p&gt;
&lt;p&gt;論文一：Construction and theoretical study of a ball balancing platform&lt;/p&gt;
&lt;p&gt;探討自動控制理論在穩定動態系統時的局限性，以球體平衡平台為例。 建立球體平衡平台的理論模型，並與實際搭建的平台進行比較。 分析理論與實際結果之間的差異，探討控制理論與系統實施的挑戰。&lt;/p&gt;
&lt;p&gt;結論：&lt;/p&gt;
&lt;p&gt;線性控制可以實現球體平衡平台的良好性能，但存在靜態誤差。 理論與實際結果的差異主要來自於物理模型的誤差和電子元件的非理想特性。 穩定動態系統的性能受限於狀態調整的靈活性、控制器設計和輸入數據的準確性。&lt;/p&gt;
&lt;p&gt;論文二：A real time control system for balancing a ball on a platform with FPGA parallel implementation&lt;/p&gt;
&lt;p&gt;提出基於 PID 控制器的解決方案，以提高球體在平台上的位置調節精度。 使用 FPGA 實現平行計算，以提高系統速度和性能。 開發球體平衡平台的轉移函數，並合成 PID 控制器。&lt;/p&gt;
&lt;p&gt;結論：&lt;/p&gt;
&lt;p&gt;透過 FPGA 平行計算實現的 PID 控制器能有效提高球體位置調節精度。 該方案可應用於控制具有多個參數的高速物件。&lt;/p&gt;
&lt;p&gt;論文三：Simulation and Experimental Study of Ball Position Control at Biaxial Platform using State Space Approach&lt;/p&gt;
&lt;p&gt;設計和比較三種控制結構，用於自動穩定球體在平台上的位置和軌跡追踪：PD 控制器、狀態空間反饋和帶狀態空間回饋的狀態空間觀測器。 使用牛頓法推導球體平衡平台的數學模型，並設計直流電機位置迴路控制。&lt;/p&gt;
&lt;p&gt;結論：&lt;/p&gt;
&lt;p&gt;三種控制結構均能實現穩定控制，但狀態空間觀測器具有最佳性能。 該研究建立了一個教育平台，用於向非技術人員解釋基本控制系統原理。&lt;/p&gt;
&lt;p&gt;論文四：Design and Implementation a Ball Balancing System for Control Theory Course&lt;/p&gt;
&lt;p&gt;開發一個球體平衡系統，使用微控制器和控制演算法來調節球體在梁上的平衡。 利用超聲波傳感器獲取球體位置，並使用 PID 控制演算法調整梁的角度。 開發介面程式，將即時位置曲線繪製在 MATLAB 中。&lt;/p&gt;
&lt;p&gt;結論：&lt;/p&gt;
&lt;p&gt;球體平衡系統是一個低成本的教育工具，可用於教授控制理論的應用。 該系統允許學生將理論知識應用於實踐中，並了解封閉迴路回饋系統和 PID 演算法的原理。&lt;/p&gt;
&lt;p&gt;論文五：Ball on the plate balancing control system&lt;/p&gt;
&lt;p&gt;設計一個二自由度球體平衡實驗平台，用於測試和驗證平衡控制演算法。 使用電阻式觸摸屏獲取球體位置數據，使用步進電機和位置傳感器控制平台傾斜角度。 設計基於 AVR 微控制器的雙環下屬控制系統，使用 PID 控制器維持球體平衡。&lt;/p&gt;
&lt;p&gt;結論：&lt;/p&gt;
&lt;p&gt;該系統使用步進電機替代伺服電機，並無需外部電腦進行圖像處理，具有成本效益和易於控制的優勢。 未來計劃改進球體位置回饋信號的濾波，以提高控制系統的速度和品質。&lt;/p&gt;
&lt;p&gt;論文六：2D Ball Balancer Control using QUARC&lt;/p&gt;
&lt;p&gt;使用 QUARC 軟體設計和實現球體在二維平台上的位置控制。 設計 PD 和 PID 控制器，並探討設定點權重和積分器抗飽和等控制技術。 使用攝像頭讀取球體位置，並進行校準和轉換。&lt;/p&gt;
&lt;p&gt;結論：&lt;/p&gt;
&lt;p&gt;PD 和 PID 控制器均能實現球體位置控制，但 PID 控制器在跟踪斜坡和正弦參考信號時具有更好的性能。 該實驗涵蓋了建模、控制器設計、模擬和實施等多個控制系統的關鍵步驟，為學生提供了寶貴的學習經驗。&lt;/p&gt;
&lt;p&gt;接下來, 必須要設法了解, 哪一篇或哪幾篇論文對我們解決下列問題最有參考價值!&lt;/p&gt;</content><category term="w10"></category><category term="網誌編寫﹐論文摘要"></category></entry><entry><title>W9</title><link href="./cd2024-2a-w9.html" rel="alternate"></link><published>2024-04-19T14:00:00+08:00</published><updated>2024-04-27T14:29:53+08:00</updated><author><name>Probe</name></author><id>tag:None,2024-04-19:./cd2024-2a-w9.html</id><summary type="html">&lt;p&gt;2024 Spring 第九週 網誌&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第九週 網誌&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;h2&gt;w9&lt;/h2&gt;
&lt;p&gt;期末考週&lt;/p&gt;
&lt;p&gt;自評&lt;/p&gt;</content><category term="w9"></category><category term="網誌編寫﹐期中考"></category></entry><entry><title>W8</title><link href="./cd2024-2a-w8.html" rel="alternate"></link><published>2024-04-12T14:00:00+08:00</published><updated>2024-04-18T07:07:30+08:00</updated><author><name>Probe</name></author><id>tag:None,2024-04-12:./cd2024-2a-w8.html</id><summary type="html">&lt;p&gt;2024 Spring 第八週 網誌&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第八週 網誌&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;h2&gt;w8&lt;/h2&gt;
&lt;p&gt;今日遇到的較難處理的狀況-提交多數中有一則提交檔案過大，但是已經覆蓋很多次的提交。&lt;/p&gt;
&lt;p&gt;詢問老師解釋git只能利用"增加"來提交檔案，所以之前加入過大的檔案儘管刪掉還是存在，只能透過找到那則提交然後單獨刪除才能解決後續的提交。&lt;/p&gt;
&lt;p&gt;查詢chatGPT之後得知要往前推一則提交要輸入git reset --hard HEAD^。&lt;/p&gt;
&lt;p&gt;推到自己要的提交之前進行修正。&lt;/p&gt;</content><category term="w8"></category><category term="網誌編寫﹐ChatGPT"></category></entry><entry><title>W6</title><link href="./cd2024-2a-w6.html" rel="alternate"></link><published>2024-03-29T14:00:00+08:00</published><updated>2024-04-18T06:57:53+08:00</updated><author><name>Probe</name></author><id>tag:None,2024-03-29:./cd2024-2a-w6.html</id><summary type="html">&lt;p&gt;2024 Spring 第六週 網誌&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第六週 網誌&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;h2&gt;w6&lt;/h2&gt;
&lt;p&gt;因群組內的個人倉儲未同步更新，要進入codespaces更改
程式如下。&lt;/p&gt;
&lt;p&gt;git submodule update --init。&lt;/p&gt;
&lt;p&gt;cd 自己學號 進入到自己的資料夾內。&lt;/p&gt;
&lt;p&gt;git pull origin main 把最新版本拉下同步。&lt;/p&gt;
&lt;p&gt;cd ..回上頁。&lt;/p&gt;
&lt;p&gt;git status 查看分支現在狀況。&lt;/p&gt;
&lt;p&gt;git add . 加入。&lt;/p&gt;
&lt;p&gt;git commit -m "更新內容"。&lt;/p&gt;
&lt;p&gt;git push 推送。&lt;/p&gt;
&lt;p&gt;到github查看是否更新成功。&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;內容管理系統&lt;/h1&gt;</content><category term="w6"></category><category term="網誌編寫﹐子模組"></category></entry><entry><title>W5</title><link href="./cd2024-2a-w5.html" rel="alternate"></link><published>2024-03-22T16:00:00+08:00</published><updated>2024-04-18T06:57:47+08:00</updated><author><name>Probe</name></author><id>tag:None,2024-03-22:./cd2024-2a-w5.html</id><summary type="html">&lt;p&gt;2024 Spring 第五週 網誌&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第五週 網誌&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;h2&gt;w5&lt;/h2&gt;
&lt;p&gt;重點整理:組長必須建立一個midag的其中team&lt;/p&gt;
&lt;p&gt;利用codespaces來進行同步更新&lt;/p&gt;
&lt;p&gt;要啟動codespaces裡要先輸入chmod x+u init_replit把模組安裝&lt;/p&gt;
&lt;p&gt;接下來輸入python3 main.py來開啟（類似replit中的Run鍵）&lt;/p&gt;
&lt;p&gt;推送的步驟如下
git add .
git commit -m "modify site title"
git push
完成後回到網頁確認更新完畢&lt;/p&gt;
&lt;p&gt;網頁給的cpu為二核 8gb的ram跟32gb的內存&lt;/p&gt;
&lt;h1&gt;內容管理系統&lt;/h1&gt;</content><category term="w5"></category><category term="網誌編寫﹐自評"></category></entry><entry><title>W4</title><link href="./cd2024-2a-w4.html" rel="alternate"></link><published>2024-03-15T14:00:00+08:00</published><updated>2024-04-12T07:01:18+08:00</updated><author><name>Probe</name></author><id>tag:None,2024-03-15:./cd2024-2a-w4.html</id><summary type="html">&lt;p&gt;2024 Spring 第四週 影片上字幕&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第四週 影片上字幕&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;h2&gt;w4&lt;/h2&gt;
&lt;p&gt;1.各組員協助將老師的教學影片上字幕。&lt;/p&gt;
&lt;p&gt;2.影片逐字稿產生。&lt;/p&gt;
&lt;p&gt;3.組長統整全部影片。&lt;/p&gt;
&lt;p&gt;4.&lt;a href="https://drive.google.com/drive/folders/14sDUncS7C1BIqFQBrcUbDH9-4of_IuGu?usp=drive_link"&gt;影片位於google雲端硬碟&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5.&lt;a href="https://drive.google.com/drive/folders/16o4nR3whRk9k8C_eAx97uaiwu12lm4QR?usp=drive_link"&gt;逐字稿位於google雲端硬碟&lt;/a&gt;&lt;/p&gt;</content><category term="w4"></category><category term="網誌編寫﹐影片﹐字幕"></category></entry><entry><title>W3</title><link href="./cd2024-2a-w3.html" rel="alternate"></link><published>2024-03-08T15:00:00+08:00</published><updated>2024-04-12T07:01:05+08:00</updated><author><name>Probe</name></author><id>tag:None,2024-03-08:./cd2024-2a-w3.html</id><summary type="html">&lt;p&gt;2024 Spring 第三週 翻譯作業&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第三週 翻譯作業&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;h2&gt;w3&lt;/h2&gt;
&lt;p&gt;1.利用工具翻譯MS Teams裡的pdf，組員分工合作統整上傳。&lt;/p&gt;
&lt;p&gt;2.頁數分組抽籤如下:
1-20  葉承軒、
21-31 黃育驊、
32-42 樊明睿、
43-53 張晏菖、
54-64 顏崇祐、
65-75 邱崑展、
76-87 段勝吉、
統整  田芸熏。&lt;/p&gt;
&lt;p&gt;3.協助各組員加入midga1子模組。&lt;/p&gt;</content><category term="w3"></category><category term="網誌編寫﹐分組﹐翻譯"></category></entry><entry><title>W2</title><link href="./cd2024-2a-w2.html" rel="alternate"></link><published>2024-03-01T16:00:00+08:00</published><updated>2024-04-12T07:00:31+08:00</updated><author><name>Probe</name></author><id>tag:None,2024-03-01:./cd2024-2a-w2.html</id><summary type="html">&lt;p&gt;2024 Spring 第二週 分組&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第二週 分組&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;h2&gt;w2&lt;/h2&gt;
&lt;p&gt;1.組別:midag1&lt;/p&gt;
&lt;p&gt;組員名單:&lt;/p&gt;
&lt;p&gt;41123124張晏菖(組長)、
41123101田芸熏、
41123120段勝吉、
41123140葉承軒、
41123146樊明睿、
41123150顏崇祐、
41136113邱崑展、
41136123黃育驊。&lt;/p&gt;
&lt;p&gt;2.建立github分組倉儲提供組員加入。&lt;/p&gt;
&lt;p&gt;3.製作組別倉儲ssh鑰匙。&lt;/p&gt;
&lt;p&gt;4.import進入Replit。&lt;/p&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script&gt;
    /**
    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
    *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables    */
    /*
    var disqus_config = function () {
    this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
    this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() { // DON'T EDIT BELOW THIS LINE
    var d = document, s = d.createElement('script');
    s.src = 'https://https-probe2004-github-io-cd2024.disqus.com/embed.js';
    s.setAttribute('data-timestamp', +new Date());
    (d.head || d.body).appendChild(s);
    })();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="https://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;</content><category term="w2"></category><category term="網誌編寫﹐分組"></category></entry><entry><title>2024 Spring 課程</title><link href="./2024-Spring-w1-blog-tutorial.html" rel="alternate"></link><published>2024-02-29T23:00:00+08:00</published><updated>2024-03-29T07:06:40+08:00</updated><author><name>Probe</name></author><id>tag:None,2024-02-29:./2024-Spring-w1-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 第一週 網誌&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 第一週 網誌&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="w1"></category><category term="網誌編寫﹐pelican"></category></entry></feed>